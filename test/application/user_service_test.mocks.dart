// Mocks generated by Mockito 5.4.4 from annotations
// in suitmedia_msib_test/test/application/user_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:suitmedia_msib_test/data/entities/user_response_entity.dart'
    as _i2;
import 'package:suitmedia_msib_test/data/repositories/user_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeUserResponseEntity_0 extends _i1.SmartFake
    implements _i2.UserResponseEntity {
  _FakeUserResponseEntity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i3.UserRepository {
  @override
  _i4.Future<_i2.UserResponseEntity> getUser({
    int? page = 1,
    int? perPage = 10,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUser,
          [],
          {
            #page: page,
            #perPage: perPage,
          },
        ),
        returnValue:
            _i4.Future<_i2.UserResponseEntity>.value(_FakeUserResponseEntity_0(
          this,
          Invocation.method(
            #getUser,
            [],
            {
              #page: page,
              #perPage: perPage,
            },
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.UserResponseEntity>.value(_FakeUserResponseEntity_0(
          this,
          Invocation.method(
            #getUser,
            [],
            {
              #page: page,
              #perPage: perPage,
            },
          ),
        )),
      ) as _i4.Future<_i2.UserResponseEntity>);
}
